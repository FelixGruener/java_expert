package com.mycompaby.java8;

import java.util.List;

/*create a new Java project "ConcurrencyDemo"
write a class DataStore (singleton!) which uses a List<String> for storing names, it provides 
the following methods: addName, removeName, getNames - returns the whole list
write a class MainApp, create an instance of DataStore and add some names to list
execute two Runnables using an ExecutorService (use at least 2 threads)
 - runnable1 should call getNames() and iterates over list (add some sleeps)
 - runnable2 should call removeName()
what happens?
DEMO
solution with CopyOnWriteList
solution with synchronized
solution with ReentrantReadWriteLock*/

public class DataStore {
	
	List<String> names;

	public List<String> getNames() {
		return names;
	}

	public void setNames(List<String> names) {
		this.names = names;
	}
	
	public void addName(Names name) {
		
	}
	
	
	
	

}
