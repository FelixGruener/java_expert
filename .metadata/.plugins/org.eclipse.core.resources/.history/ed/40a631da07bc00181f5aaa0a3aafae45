package com.mycompany.java8;

import java.util.concurrent.Callable;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

public class MainApp {

	public static void main(String[] args) throws Exception {
		// TODO Auto-generated method stub
		Runnable task = () -> { System.out.println("HEllo");
		
		try {
			Thread.sleep(5000);
			
		} catch (InterruptedException ignored) {
			
		}
		System.out.println("after sleep");
		};
		
		//Old Way 
		//Thread thread = new Thread(task);
		//thread.start();
		
		//New Way
		ExecutorService es = Executors.newFixedThreadPool(1);
		es.execute(task);
		es.execute(task);
		
		Callable<String> calcTask = () ->"Hello";
		Future<String> future = es.submit(calcTask);
		
		if(future.isDone()) {
			System.out.println(future.get()); //blocks until rsult can be returned 
		}
		
		//STRG TASTE HALTEN UDN AUF FUNKTION ZEIGEN öffnet JAVA DOKUMENTATION 
		
		es.shutdown();
		
		
		
		

	}

}
